//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Main.SitesServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", ConfigurationName="SitesServiceReference.SitesSoap")]
    public interface SitesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetSiteTemplates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        uint GetSiteTemplates(out Main.SitesServiceReference.Template[] TemplateList, uint LCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUpdatedFormDigest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ExportWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ExportWeb(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ImportWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ImportWeb(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class Template : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string titleField;
        
        private string nameField;
        
        private bool isUniqueField;
        
        private bool isHiddenField;
        
        private string descriptionField;
        
        private string imageUrlField;
        
        private bool isCustomField;
        
        private bool isSubWebOnlyField;
        
        private bool isRootWebOnlyField;
        
        private string displayCategoryField;
        
        private string filterCategoriesField;
        
        private bool hasProvisionClassField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsUnique {
            get {
                return this.isUniqueField;
            }
            set {
                this.isUniqueField = value;
                this.RaisePropertyChanged("IsUnique");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsHidden {
            get {
                return this.isHiddenField;
            }
            set {
                this.isHiddenField = value;
                this.RaisePropertyChanged("IsHidden");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
                this.RaisePropertyChanged("ImageUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsCustom {
            get {
                return this.isCustomField;
            }
            set {
                this.isCustomField = value;
                this.RaisePropertyChanged("IsCustom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsSubWebOnly {
            get {
                return this.isSubWebOnlyField;
            }
            set {
                this.isSubWebOnlyField = value;
                this.RaisePropertyChanged("IsSubWebOnly");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsRootWebOnly {
            get {
                return this.isRootWebOnlyField;
            }
            set {
                this.isRootWebOnlyField = value;
                this.RaisePropertyChanged("IsRootWebOnly");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DisplayCategory {
            get {
                return this.displayCategoryField;
            }
            set {
                this.displayCategoryField = value;
                this.RaisePropertyChanged("DisplayCategory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FilterCategories {
            get {
                return this.filterCategoriesField;
            }
            set {
                this.filterCategoriesField = value;
                this.RaisePropertyChanged("FilterCategories");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HasProvisionClass {
            get {
                return this.hasProvisionClassField;
            }
            set {
                this.hasProvisionClassField = value;
                this.RaisePropertyChanged("HasProvisionClass");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SitesSoapChannel : Main.SitesServiceReference.SitesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SitesSoapClient : System.ServiceModel.ClientBase<Main.SitesServiceReference.SitesSoap>, Main.SitesServiceReference.SitesSoap {
        
        public SitesSoapClient() {
        }
        
        public SitesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SitesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SitesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SitesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public uint GetSiteTemplates(out Main.SitesServiceReference.Template[] TemplateList, uint LCID) {
            return base.Channel.GetSiteTemplates(out TemplateList, LCID);
        }
        
        public string GetUpdatedFormDigest() {
            return base.Channel.GetUpdatedFormDigest();
        }
        
        public int ExportWeb(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize) {
            return base.Channel.ExportWeb(jobName, webUrl, dataPath, includeSubwebs, includeUserSecurity, overWrite, cabSize);
        }
        
        public int ImportWeb(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite) {
            return base.Channel.ImportWeb(jobName, webUrl, dataFiles, logPath, includeUserSecurity, overWrite);
        }
    }
}
